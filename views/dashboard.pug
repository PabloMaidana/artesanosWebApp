// views/dashboard.pug
doctype html
html
  head
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width, initial-scale=1")
    title Dashboard ‚Äì Artesanos.com
    link(rel="stylesheet" href="/public/css/main.css")
    script(src="/socket.io/socket.io.js")
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
  body
    .dashboard-container
      // Header con nombre y campanita
      header.dashboard-header
        .left
          a.profile-link(href="/usuario/perfil")
            if user.url_imagen_perfil
              img.profile-thumb(src=user.url_imagen_perfil alt="Foto")
            else
              
              img.profile-thumb(src="/public/images/default-profile.png" alt="Foto")
            span.profile-name #{user.nombre} #{user.apellido}
        .right
          button#notifButton.notification-btn(type="button")
            | üîî
            if notifCount > 0
              span#notifCount.badge #{notifCount}

      // Contenedor principal: pesta√±as + contenido
      .dashboard-main
        // pesta√±as
        nav.tabs
          // activeTab para asignar clase 'active'
          - var at = typeof activeTab !== 'undefined' ? activeTab : 'tab-friends-albums'
          button.tab-button(class= at === 'tab-friends-albums' ? 'active' : '' data-tab="tab-friends-albums") √Ålbumes de amigos
          button.tab-button(class= at === 'tab-my-albums' ? 'active' : '' data-tab="tab-my-albums") Mis √°lbumes
          button.tab-button(class= at === 'tab-share' ? 'active' : '' data-tab="tab-share") Compartir
          button.tab-button(class= at === 'tab-search' ? 'active' : '' data-tab="tab-search") Buscar personas

        // Contenido de pesta√±as
        .tabs-content
          // 1) √Ålbumes de amigos
          section#tab-friends-albums.tab-content(class= at === 'tab-friends-albums' ? 'active' : '')
            h2 √Ålbumes de amigos
            if friends.length === 0
              p A√∫n no tienes amigos.
            else
              ul.friends-list
                each f in friends
                  li
                    button.friend-item(data-friend-id=f.usuario_id) #{f.nombre} #{f.apellido}
              .friend-albums-container
                p Selecciona un amigo para ver sus √°lbumes.

          // 2) Mis √°lbumes
          section#tab-my-albums.tab-content(class= at === 'tab-my-albums' ? 'active' : '')
            h2 Mis √Ålbumes
            form#create-album-form(action="/album/create" method="POST" class="form-inline")
              input(type="text" name="titulo" placeholder="T√≠tulo del √°lbum" required)
              button(type="submit") Crear
            hr
            if myAlbums.length === 0
              p No tienes √°lbumes a√∫n.
            else
              ul.my-albums-list
                each a in myAlbums
                  li
                    a(href=`/imagen/list/${a.album_id}`) #{a.titulo} (#{a.album_id})
            .upload-link
              a.btn(href="/imagen/create") Subir imagen

          // 3) Compartir
          section#tab-share.tab-content(class= activeTab === 'tab-share' ? 'active' : '')
          h2 Solicitudes de amistad

          // Solicitudes pendientes
          if pendingRequests.length === 0
            p No tienes solicitudes pendientes.
          else
            ul.requests-list
              each reqItem in pendingRequests
                li
                  span #{reqItem.nombre} #{reqItem.apellido}
                  form(action="/dashboard/accept-request" method="POST" style="display:inline;")
                    input(type="hidden" name="solicitante_id" value=reqItem.solicitante_id)
                    button(type="submit") Aceptar
                  form(action="/dashboard/reject-request" method="POST" style="display:inline; margin-left:0.5rem;")
                    input(type="hidden" name="solicitante_id" value=reqItem.solicitante_id)
                    button(type="submit") Rechazar

          // √Ålbumes compartidos ya creados por este usuario (aceptador)
          if sharedAlbumsForAceptor && sharedAlbumsForAceptor.length > 0
            hr
            h3 √Ålbumes compartidos creados
            ul.shared-albums-list
              each alb in sharedAlbumsForAceptor
                li
                  span #{alb.titulo} (para #{alb.solicitante_nombre} #{alb.solicitante_apellido})
                  a.btn(href=`/imagen/add-to-shared/${alb.album_id}`) Agregar/Ver im√°genes
          else
            // Si no hay a√∫n √°lbumes creados
            p No has creado √°lbumes compartidos hasta ahora.

          // 4) Buscar personas
          section#tab-search.tab-content(class= activeTab === 'tab-search' ? 'active' : '')
            h2 Buscar personas
            form#search-form(action="/dashboard/search" method="GET" class="form-inline")
              input(type="text" name="term" placeholder="Nombre exacto o 'Nombre Apellido'" value=(typeof searchTerm !== 'undefined' ? searchTerm : ''))
              button(type="submit") Buscar

            if typeof emptySearch !== 'undefined' && emptySearch
              p.alert-error Debes ingresar un nombre o apellido para buscar.
            else if typeof searchResults !== 'undefined'
              hr
              if searchResults.length === 0
                p No se encontraron usuarios para "#{searchTerm}".
              else
                ul.search-results
                  each u in searchResults
                    li
                      span #{u.nombre} #{u.apellido}
                      if u.isFriend
                        span.status Amigo
                      else if u.pendingReceived
                        span.status Te envi√≥ solicitud
                      else if u.pendingSent
                        span.status Solicitud enviada
                      else
                        // Formulario para enviar solicitud: incluimos hidden term
                        form(action="/amistad/solicitud/send" method="POST" class="form-inline inline-form")
                          input(type="hidden" name="destinatario_id" value=u.usuario_id)
                          // Este hidden transporta el t√©rmino de b√∫squeda actual
                          input(type="hidden" name="term" value=searchTerm)
                          button(type="submit") Enviar solicitud
                          
      // Panel de notificaciones flotante
      .notification-panel#notifPanel.hidden
        h3 Notificaciones
        if notifications.length > 0
          ul.notif-list
            each n in notifications
              li.notif-item
                a(href=n.enlace onclick=`markAsRead(${n.notificacion_id}); return false;`) #{n.mensaje}
                br
                small.text-muted #{new Date(n.fecha).toLocaleString()}
        else
          p Sin nuevas notificaciones.

    
    script.
      window.myImagesCache = !{JSON.stringify(myImages)};

    
    script.
      document.addEventListener('DOMContentLoaded', () => {
        // Notificaciones en tiempo real (socket.io)
        if (typeof io !== 'undefined') {
          const socket = io();
          socket.emit('register_user', #{user.usuario_id});
          socket.on('nueva_notificacion', data => {
            const badge = document.getElementById('notifCount');
            let count = parseInt(badge?.textContent || '0', 10) + 1;
            if (badge) {
              badge.textContent = count;
            } else {
              const btn = document.getElementById('notifButton');
              const span = document.createElement('span');
              span.id = 'notifCount';
              span.className = 'badge';
              span.textContent = count;
              btn.appendChild(span);
            }
          });
        }

        // Manejo pesta√±as
        const tabButtons = document.querySelectorAll('.tab-button');
        const tabContents = document.querySelectorAll('.tab-content');
        tabButtons.forEach(btn => {
          btn.addEventListener('click', () => {
            tabButtons.forEach(b => b.classList.remove('active'));
            tabContents.forEach(c => c.classList.remove('active'));
            btn.classList.add('active');
            const targetId = btn.getAttribute('data-tab');
            const section = document.getElementById(targetId);
            if (section) section.classList.add('active');
          });
        });

        // Manejo campanita
        const notifButton = document.getElementById('notifButton');
        const notifPanel = document.getElementById('notifPanel');
        if (notifButton && notifPanel) {
          notifButton.addEventListener('click', () => {
            notifPanel.classList.toggle('hidden');
          });
        }

        // √Ålbumes de amigos: cargar √°lbumes v√≠a AJAX al hacer clic
        document.querySelectorAll('.friend-item').forEach(button => {
          button.addEventListener('click', async () => {
            const friendId = button.getAttribute('data-friend-id');
            const container = document.querySelector('.friend-albums-container');
            container.innerHTML = 'Cargando √°lbumes...';
            try {
              const resp = await axios.get(`/dashboard/friend-albums/${friendId}`);
              if (!resp.data.albums || resp.data.albums.length === 0) {
                container.innerHTML = '<p>Este amigo no tiene √°lbumes o no comparti√≥ im√°genes.</p>';
              } else {
                const ul = document.createElement('ul');
                ul.className = 'friend-albums-list';
                resp.data.albums.forEach(a => {
                  const li = document.createElement('li');
                  const link = document.createElement('a');
                  link.href = `/imagen/list/${a.album_id}`;
                  link.textContent = `${a.titulo} (${a.imageCount})`;
                  li.appendChild(link);
                  ul.appendChild(li);
                });
                container.innerHTML = '';
                container.appendChild(ul);
              }
            } catch (err) {
              console.error(err);
              container.innerHTML = '<p>Error al cargar √°lbumes.</p>';
            }
          });
        });

        // Compartir im√°genes: mostrar form con checkboxes
        document.querySelectorAll('.request-item').forEach(button => {
          button.addEventListener('click', () => {
            const solicitanteId = button.getAttribute('data-solicitante-id');
            const container = document.querySelector('.share-images-container');
            const images = window.myImagesCache || [];
            if (!images || images.length === 0) {
              container.innerHTML = '<p>Error: no hay im√°genes cargadas.</p>';
              return;
            }
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/dashboard/share';
            form.className = 'form-share-images';
            const inpSolic = document.createElement('input');
            inpSolic.type = 'hidden';
            inpSolic.name = 'solicitante_id';
            inpSolic.value = solicitanteId;
            form.appendChild(inpSolic);
            const ul = document.createElement('ul');
            ul.className = 'share-images-list';
            images.forEach(img => {
              const li = document.createElement('li');
              const label = document.createElement('label');
              const chk = document.createElement('input');
              chk.type = 'checkbox';
              chk.name = 'imageIds';
              chk.value = img.imagen_id;
              label.appendChild(chk);
              const span = document.createElement('span');
              span.textContent = ` ${img.descripcion || img.url}`;
              label.appendChild(span);
              if (img.url) {
                const thumb = document.createElement('img');
                thumb.src = img.url;
                thumb.alt = img.descripcion || '';
                thumb.className = 'share-thumb';
                li.appendChild(thumb);
              }
              li.appendChild(label);
              ul.appendChild(li);
            });
            form.appendChild(ul);
            const btnSubmit = document.createElement('button');
            btnSubmit.type = 'submit';
            btnSubmit.textContent = 'Compartir seleccionadas';
            form.appendChild(btnSubmit);
            container.innerHTML = '';
            container.appendChild(form);
          });
        });

      }); 
